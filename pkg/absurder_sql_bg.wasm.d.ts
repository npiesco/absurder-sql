/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const init_logger: () => void;
export const __wbg_database_free: (a: number, b: number) => void;
export const database_newDatabase: (a: number, b: number) => any;
export const database_execute: (a: number, b: number, c: number) => any;
export const database_executeWithParams: (a: number, b: number, c: number, d: any) => any;
export const database_close: (a: number) => any;
export const database_sync: (a: number) => any;
export const database_allowNonLeaderWrites: (a: number, b: number) => any;
export const database_exportToFile: (a: number) => any;
export const database_importFromFile: (a: number, b: any) => any;
export const database_waitForLeadership: (a: number) => any;
export const database_requestLeadership: (a: number) => any;
export const database_getLeaderInfo: (a: number) => any;
export const database_queueWrite: (a: number, b: number, c: number) => any;
export const database_queueWriteWithTimeout: (a: number, b: number, c: number, d: number) => any;
export const database_isLeader: (a: number) => any;
export const database_is_leader: (a: number) => any;
export const database_onDataChange: (a: number, b: any) => [number, number];
export const database_enableOptimisticUpdates: (a: number, b: number) => any;
export const database_isOptimisticMode: (a: number) => any;
export const database_trackOptimisticWrite: (a: number, b: number, c: number) => any;
export const database_getPendingWritesCount: (a: number) => any;
export const database_clearOptimisticWrites: (a: number) => any;
export const database_enableCoordinationMetrics: (a: number, b: number) => any;
export const database_isCoordinationMetricsEnabled: (a: number) => any;
export const database_recordLeadershipChange: (a: number, b: number) => any;
export const database_recordNotificationLatency: (a: number, b: number) => any;
export const database_recordWriteConflict: (a: number) => any;
export const database_recordFollowerRefresh: (a: number) => any;
export const database_getCoordinationMetrics: (a: number) => any;
export const database_resetCoordinationMetrics: (a: number) => any;
export const __wbg_wasmcolumnvalue_free: (a: number, b: number) => void;
export const wasmcolumnvalue_createNull: () => number;
export const wasmcolumnvalue_createInteger: (a: bigint) => number;
export const wasmcolumnvalue_createReal: (a: number) => number;
export const wasmcolumnvalue_createText: (a: number, b: number) => number;
export const wasmcolumnvalue_createBlob: (a: number, b: number) => number;
export const wasmcolumnvalue_createBigInt: (a: number, b: number) => number;
export const wasmcolumnvalue_createDate: (a: number) => number;
export const wasmcolumnvalue_fromJsValue: (a: any) => number;
export const wasmcolumnvalue_integer: (a: number) => number;
export const wasmcolumnvalue_blob: (a: number, b: number) => number;
export const wasmcolumnvalue_big_int: (a: number, b: number) => number;
export const wasmcolumnvalue_date: (a: number) => number;
export const wasmcolumnvalue_text: (a: number, b: number) => number;
export const wasmcolumnvalue_real: (a: number) => number;
export const wasmcolumnvalue_null: () => number;
export const rust_sqlite_wasm_shim_strcmp: (a: number, b: number) => number;
export const rust_sqlite_wasm_shim_strncmp: (a: number, b: number, c: number) => number;
export const rust_sqlite_wasm_shim_strcspn: (a: number, b: number) => number;
export const rust_sqlite_wasm_shim_strspn: (a: number, b: number) => number;
export const rust_sqlite_wasm_shim_strrchr: (a: number, b: number) => number;
export const rust_sqlite_wasm_shim_strchr: (a: number, b: number) => number;
export const rust_sqlite_wasm_shim_memchr: (a: number, b: number, c: number) => number;
export const rust_sqlite_wasm_shim_acosh: (a: number) => number;
export const rust_sqlite_wasm_shim_asinh: (a: number) => number;
export const rust_sqlite_wasm_shim_atanh: (a: number) => number;
export const rust_sqlite_wasm_shim_trunc: (a: number) => number;
export const rust_sqlite_wasm_shim_sqrt: (a: number) => number;
export const rust_sqlite_wasm_shim_localtime: (a: number) => number;
export const rust_sqlite_wasm_shim_malloc: (a: number) => number;
export const rust_sqlite_wasm_shim_free: (a: number) => void;
export const rust_sqlite_wasm_shim_realloc: (a: number, b: number) => number;
export const rust_sqlite_wasm_shim_calloc: (a: number, b: number) => number;
export const sqlite3_os_init: () => number;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_export_5: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const wasm_bindgen__convert__closures_____invoke__hb63076da0b75c0a3: (a: number, b: number) => void;
export const closure933_externref_shim: (a: number, b: number, c: any) => void;
export const closure310_externref_shim: (a: number, b: number, c: any) => void;
export const closure961_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
